//flood fill algorithm

class Solution {
    public int numIslands(char[][] grid) {
        List<Set<Integer>> islandList = new ArrayList<>();
        int m = grid.length, n = grid[0].length;
        int count = 0;
        
        for(int i=0; i<m; i++) {
            for(int j=0; j<n; j++) {
                if(grid[i][j] == '1') {
                    islandCheck(i, j, grid);
                    count++;
                }
            }
        }
        
        return count;
    }
    
    public void islandCheck(int i, int j, char[][] grid) {
        if(i < 0 || j < 0 || i >= grid.length || j >= grid[0].length || (i >= 0 && j >= 0 && grid[i][j] == '0'))
            return;
        
        grid[i][j] = '0';
        
        islandCheck(i-1, j, grid);
        islandCheck(i+1, j, grid);
        islandCheck(i, j-1, grid);
        islandCheck(i, j+1, grid);
    }
}
