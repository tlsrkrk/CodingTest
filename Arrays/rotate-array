// rotate space complexity O(1) 

reversal algorithm

1, 2, 3, 4, 5, 6, 7  rotate 3

=> 4, 3, 2, 1 / 7, 6, 5

=> 5, 6, 7, 1, 2, 3, 4



class Solution {
    public void rotate(int[] nums, int k) {
        int r = k % nums.length;
        
        if(r == 0) return;
        
        reverse(nums, 0, nums.length - r - 1);
        reverse(nums, nums.length - r, nums.length - 1);
        reverse(nums, 0, nums.length - 1);
    }
    
    public void reverse(int[] nums, int l, int r) {
        while(l < r) {
            int temp = nums[l];
            nums[l] = nums[r];
            nums[r] = temp;
            r--;
            l++;
        }
    }
}
